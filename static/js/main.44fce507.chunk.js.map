{"version":3,"sources":["ducks/templates.js","ducks/houses.js","reducers/index.js","store/index.js","api-config.js","components/Navbar/Navbar.js","components/Footer/Footer.js","containers/HouseList/components/TempleteSelector.js","containers/HouseCard/components/HouseImage.js","containers/HouseCard/components/HouseAddress.js","containers/HouseCard/components/HousePrice.js","containers/HouseCard/components/HouseArea.js","containers/HouseCard/HouseCard.js","containers/HouseList/HouseList.js","scenes/WorkTable/WorkTable.js","App.js","index.js"],"names":["initialState","lastUpdate","list","isFetching","didInvalidate","combineReducers","templates","state","arguments","length","undefined","action","payload","type","Object","objectSpread","selected","id","Date","now","houses","store","createStore","rootReducer","compose","applyMiddleware","thunk","logger","axios","defaults","baseURL","React","memo","react_default","a","createElement","Navbar","bg","Brand","href","props","className","TempleteSelector","Row","Col","sm","Form","Group","Label","Control","as","disabled","value","onChange","e","setTemplate","target","map","_ref","key","HouseImage","_useState","useState","_useState2","slicedToArray","current","setCurrent","Card","Img","src","data","onClick","next","itm","idx","concat","children","HouseAddress","HousePrice","toLocaleString","HouseArea","house","template","lg","style","margin","body","declaration","renderElement","field","Component","component","childDeclaration","mapDispatchToProps","updateTemplatesIfNeeded","dispatch","getState","shouldFetchItems","get","then","res","catch","updateHousesIfNeeded","connect","useEffect","Fragment","components_TempleteSelector","containers_HouseCard_HouseCard","find","WorkTable","Navbar_Navbar","Container","containers_HouseList_HouseList","components_Footer_Footer","App","scenes_WorkTable_WorkTable","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.44fce507.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst TEN_MIN = 1000 * 60 * 10;\n\nconst TEMPLATES_REQUEST = 'TEMPLATES_REQUEST';\nconst TEMPLATES_RESPONSE = 'TEMPLATES_RESPONSE';\nconst SET_TEMPLATE = 'SET_TEMPLATE';\n\n\nconst getTemplates = () => dispatch => {\n  dispatch({type: TEMPLATES_REQUEST});\n\n  axios.get('https://demo4452328.mockable.io/templates')\n    .then(res => {\n      dispatch({\n        type: TEMPLATES_RESPONSE,\n        payload: res.data\n      });\n    })\n    .catch(() => dispatch({type: TEMPLATES_RESPONSE}));\n\n};\n\nconst shouldFetchItems = state => {\n  const { isFetching, list, didInvalidate, lastUpdate } = state;\n  if (isFetching) {\n    return false;\n  } else if (!list) {\n    return true;\n  } else if (didInvalidate || lastUpdate < (Date.now() - TEN_MIN)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport const updateTemplatesIfNeeded = () => (dispatch, getState) => {\n  if (shouldFetchItems(getState().templates)) {\n    dispatch(getTemplates());\n  }\n};\n\nexport const setTemplate = id => dispatch => {\n  dispatch({\n    type: SET_TEMPLATE,\n    payload: id,\n  });\n};\n\n\nconst initialState = {\n  lastUpdate: null,\n  list: [],\n  isFetching: false,\n  didInvalidate: true,\n};\n\nexport default (state = initialState, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case TEMPLATES_REQUEST: {\n      return {\n        ...state,\n        isFetching: true,\n      };\n    }\n    case TEMPLATES_RESPONSE: {\n      return {\n        ...state,\n        list: payload,\n        selected: payload[0].id,\n        isFetching: false,\n        lastUpdate: Date.now(),\n        didInvalidate: false\n      }\n    }\n    case SET_TEMPLATE: {\n      return {\n        ...state,\n        selected: payload,\n      };\n    }\n    default:\n      return state;\n  }\n};","import axios from 'axios';\n\nconst ONE_MIN = 1000 * 60;\nexport const HOUSES_REQUEST = 'HOUSES_REQUEST';\nexport const HOUSES_RESPONSE = 'HOUSES_RESPONSE';\n\n\nconst getHouses = () => dispatch => {\n  dispatch({type: HOUSES_REQUEST});\n\n  axios.get('https://demo4452328.mockable.io/properties')\n    .then(res => {\n      dispatch({\n        type: HOUSES_RESPONSE,\n        payload: res.data.data\n      });\n    })\n    .catch(() => dispatch({type: HOUSES_RESPONSE}));\n\n};\n\nconst shouldFetchItems = state => {\n  const { isFetching, list, didInvalidate, lastUpdate } = state;\n  if (isFetching) {\n    return false;\n  } else if (!list) {\n    return true;\n  } else if (didInvalidate || lastUpdate < (Date.now() - ONE_MIN)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport const updateHousesIfNeeded = () => (dispatch, getState) => {\n  if (shouldFetchItems(getState().houses)) {\n    dispatch(getHouses());\n  }\n};\n\n\nconst initialState = {\n  lastUpdate: null,\n  list: [],\n  isFetching: false,\n  didInvalidate: true,\n};\n\nexport default (state = initialState, action) => {\n  const { payload } = action;\n  switch (action.type) {\n    case HOUSES_REQUEST: {\n      return {\n        ...state,\n        isFetching: true,\n      };\n    }\n    case HOUSES_RESPONSE: {\n      return {\n        ...state,\n        list: payload,\n        isFetching: false,\n        lastUpdate: Date.now(),\n        didInvalidate: false\n      }\n    }\n    default:\n      return state;\n  }\n};","import { combineReducers } from 'redux';\r\n\r\nimport templatesReducer from '../ducks/templates';\r\nimport housesReducer from '../ducks/houses';\r\n\r\n\r\nexport default combineReducers({\r\n  templates: templatesReducer,\r\n  houses: housesReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nimport rootReducer from '../reducers';\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(thunk, logger),\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import axios from 'axios';\nexport const API_ROOT = '​https://demo4452328.mockable.io/';\n\naxios.defaults.baseURL = API_ROOT;\n","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\n\nconst NavbarCustom = () => {\n    return (\n        <header>\n            <Navbar bg=\"light\">\n                <Navbar.Brand href=\"#home\">STARNAVI</Navbar.Brand>\n            </Navbar>\n        </header>\n    );\n};\n\nexport default React.memo(NavbarCustom);\n","import React from 'react';\r\n\r\n\r\nconst Footer = props => (\r\n  <footer className=\"footer mt-auto py-3\">\r\n    <div className=\"container\">\r\n      <p className=\"m-0 text-center\">Copyright &copy; Your Website 2019</p>\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nexport default React.memo(Footer);\r\n","import React from 'react';\nimport { Form, Row, Col } from 'react-bootstrap';\n\n\nconst TempleteSelector = props => (\n    <Row>\n        <Col sm={4}>\n            <Form.Group>\n                <Form.Label>Choose a template</Form.Label>\n                <Form.Control\n                    as=\"select\"\n                    disabled={!props.templates.list || !props.templates.list.length}\n                    value={props.templates.selected}\n                    onChange={e => props.setTemplate(+e.target.value)}>\n                    {props.templates.list.map(({ id }) =>\n                        <option key={id}>{id}</option>\n                    )}\n                </Form.Control>\n            </Form.Group>\n        </Col>\n    </Row>\n);\n\nexport default TempleteSelector;\n","import React, { useState } from 'react';\nimport { Card } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\n\nconst HouseImage = props => {\n  const [current, setCurrent] = useState(0);\n\n  const handleClick = () => {\n    const next = current + 1;\n\n    if (next === props.data.length) {\n      setCurrent(0);\n    } else {\n      setCurrent(next);\n    }\n  };\n\n  return <div className=\"house-card__img-wrap\">\n    <div className=\"house-card__img-wrap-ratio\">\n      <Card.Img\n        className=\"house-card__img\"\n        src={props.data[current]}\n        onClick={handleClick} />\n      <ul className=\"house-card__img-indicator-list\">\n        {props.data.map((itm, idx) =>\n          <li key={itm} className={`house-card__img-indicator${idx === current ? ' current' : ''}`} />)}\n      </ul>\n    </div>\n    {props.children}\n  </div>;\n}\n\nHouseImage.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default HouseImage;\n","import React from 'react';\n\nconst HouseAddress = props => (\n    <p className=\"house-card__address\">{props.data}</p>\n);\n\nexport default HouseAddress;\n","import React from 'react';\n\nconst HousePrice = props => (\n    <p className=\"house-card__price\">$ {props.data.toLocaleString()}</p>\n);\n\nexport default HousePrice;\n","import React from 'react';\n\nconst HouseArea = props => (\n    <div className=\"house-card__area\">{props.data} sq. fr.</div>\n);\n\nexport default HouseArea;\n","import React from 'react';\nimport { Col, Card } from 'react-bootstrap';\n\nimport './HouseCard.scss';\n\nimport HouseImage from './components/HouseImage';\nimport HouseAddress from './components/HouseAddress';\nimport HousePrice from './components/HousePrice';\nimport HouseArea from './components/HouseArea';\n\nconst HouseCard = ({house, template}) => {\n    const renderElement = declaration => {\n        if (!house[declaration.field]) {\n            return null;\n        }\n        let Component;\n        switch (declaration.component) {\n            case 'IMAGE':\n                Component = HouseImage;\n                break;\n            case 'ADDRESS':\n                Component = HouseAddress;\n                break;\n            case 'PRICE':\n                Component = HousePrice;\n                break;\n            case 'AREA':\n                Component = HouseArea;\n                break;\n            default:\n                return null;\n        }\n\n        return declaration.children\n            ? <Component key={house.id + declaration.component} data={house[declaration.field]}>\n                {declaration.children\n                    .map(childDeclaration => renderElement(childDeclaration))}\n            </Component>\n            : <Component data={house[declaration.field]} key={house.id + declaration.component} />;\n    };\n\n    const renderTemplate = () => {\n        return template.map(declaration => renderElement(declaration))\n    };\n\n    return (\n        <Col sm={6} lg={4}>\n            <Card style={{margin: '15px 0'}} body>\n                {renderTemplate()}\n            </Card>\n        </Col>\n    );\n};\n\nexport default React.memo(HouseCard);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Row } from 'react-bootstrap';\n\nimport { updateHousesIfNeeded } from '../../ducks/houses';\nimport { updateTemplatesIfNeeded, setTemplate } from '../../ducks/templates';\n\nimport TempleteSelector from './components/TempleteSelector';\nimport HouseCard from '../HouseCard/HouseCard';\n\nconst HouseList = props => {\n\n  useEffect(() => {\n    props.updateTemplatesIfNeeded();\n    props.updateHousesIfNeeded();\n  }, []);\n\n  const getSelectedTemplate = () =>\n    props.templates.list\n      .find(template => template.id === props.templates.selected)\n      .template;\n\n  return (\n    <>\n      <TempleteSelector\n        templates={props.templates}\n        setTemplate={props.setTemplate} />\n      <Row>\n        {props.houses && !!props.templates.list.length && props.houses.map(house =>\n          <HouseCard\n            key={house.id}\n            house={house}\n            template={getSelectedTemplate()}\n        />)}\n      </Row>\n    </>\n  );\n};\n\nconst mapStateToProps = state => ({\n  houses: state.houses.list,\n  templates: state.templates,\n});\n\nconst mapDispatchToProps = {\n  updateTemplatesIfNeeded,\n  updateHousesIfNeeded,\n  setTemplate,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HouseList);\n","import React from 'react';\nimport {Container} from 'react-bootstrap';\n\nimport './WorkTable.css';\nimport Navbar from '../../components/Navbar/Navbar';\nimport Footer from '../../components/Footer/Footer';\nimport HouseList from '../../containers/HouseList/HouseList';\n\n\nconst WorkTable = props => (\n  <div className=\"work-table\">\n    <Navbar />\n\n    <main>\n      <Container>\n        <HouseList />\n      </Container>\n    </main>\n\n    <Footer />\n\n  </div>\n);\n\nexport default WorkTable;\n","import React from 'react';\n\nimport './api-config';\n\nimport WorkTable from './scenes/WorkTable/WorkTable';\n\nconst App = props => (\n  <WorkTable />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n// import * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}